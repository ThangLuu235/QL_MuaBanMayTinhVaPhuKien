// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QL_MuaBanMayTinh.Data;

#nullable disable

namespace QL_MuaBanMayTinh.Migrations
{
    [DbContext(typeof(MayTinhContext))]
    [Migration("20231126171752_Check")]
    partial class Check
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("QL_MuaBanMayTinh.Data.ChiTietDonNhapHang", b =>
                {
                    b.Property<string>("MaDDH")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaSP")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Gia")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("MaDDH", "MaSP");

                    b.HasIndex("MaSP");

                    b.ToTable("ChiTietDonNhapHang", (string)null);
                });

            modelBuilder.Entity("QL_MuaBanMayTinh.Data.ChiTietHoaDon", b =>
                {
                    b.Property<string>("MaHD")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaSP")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("MaHD", "MaSP");

                    b.HasIndex("MaSP");

                    b.ToTable("ChiTietHoaDon", (string)null);
                });

            modelBuilder.Entity("QL_MuaBanMayTinh.Data.ChucVu", b =>
                {
                    b.Property<string>("MaChucVu")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TenChucVu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaChucVu");

                    b.ToTable("ChucVu", (string)null);
                });

            modelBuilder.Entity("QL_MuaBanMayTinh.Data.DanhMucSanPham", b =>
                {
                    b.Property<string>("MaDM")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TenDanhMuc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaDM");

                    b.ToTable("DanhMucSanPham", (string)null);
                });

            modelBuilder.Entity("QL_MuaBanMayTinh.Data.DonNhapHang", b =>
                {
                    b.Property<string>("MaDNH")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaNCC")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaNV")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("NgayDat")
                        .HasColumnType("datetime2");

                    b.HasKey("MaDNH");

                    b.HasIndex("MaNCC");

                    b.HasIndex("MaNV");

                    b.ToTable("DonNhapHang", (string)null);
                });

            modelBuilder.Entity("QL_MuaBanMayTinh.Data.HoaDon", b =>
                {
                    b.Property<string>("MaHD")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HinhThucThanhToan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaKH")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaKM")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("NgayMua")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayNhanHang")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayThanhToan")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TienDatCoc")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TongTien")
                        .HasColumnType("int");

                    b.HasKey("MaHD");

                    b.HasIndex("MaKH");

                    b.HasIndex("MaKM");

                    b.ToTable("HoaDon", (string)null);
                });

            modelBuilder.Entity("QL_MuaBanMayTinh.Data.KhachHang", b =>
                {
                    b.Property<string>("MaKH")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GioiTinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatKhau")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenKH")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaKH");

                    b.ToTable("KhachHang", (string)null);
                });

            modelBuilder.Entity("QL_MuaBanMayTinh.Data.KhuyenMai", b =>
                {
                    b.Property<string>("MaKhuyenMai")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("PhanTramGiamGia")
                        .HasColumnType("int");

                    b.Property<string>("TenKhuyenMai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaKhuyenMai");

                    b.ToTable("KhuyenMai", (string)null);
                });

            modelBuilder.Entity("QL_MuaBanMayTinh.Data.NhaCungCap", b =>
                {
                    b.Property<string>("MaNCC")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenNCC")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaNCC");

                    b.ToTable("NhaCungCap", (string)null);
                });

            modelBuilder.Entity("QL_MuaBanMayTinh.Data.NhanVien", b =>
                {
                    b.Property<string>("MaNV")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hoten")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaChucVu")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MatKhau")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaNV");

                    b.HasIndex("MaChucVu");

                    b.ToTable("NhanVien", (string)null);
                });

            modelBuilder.Entity("QL_MuaBanMayTinh.Data.SanPham", b =>
                {
                    b.Property<string>("MaSP")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Gia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("HinhAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaDM")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoSeri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenSanPham")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("MaSP");

                    b.HasIndex("MaDM");

                    b.ToTable("SanPham", (string)null);
                });

            modelBuilder.Entity("QL_MuaBanMayTinh.Data.SanPhamThanhPhan", b =>
                {
                    b.Property<string>("MaSP")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaTP")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("MaSP", "MaTP");

                    b.HasIndex("MaTP");

                    b.ToTable("SanPhamThanhPhan", (string)null);
                });

            modelBuilder.Entity("QL_MuaBanMayTinh.Data.ThanhPhan", b =>
                {
                    b.Property<string>("MaTP")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SLTonKho")
                        .HasColumnType("int");

                    b.Property<string>("TenTP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaTP");

                    b.ToTable("ThanhPhan", (string)null);
                });

            modelBuilder.Entity("QL_MuaBanMayTinh.Data.ThongSoKyThuat", b =>
                {
                    b.Property<string>("MaThongSo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TenThongSo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaThongSo");

                    b.ToTable("ThongSoKyThuat", (string)null);
                });

            modelBuilder.Entity("QL_MuaBanMayTinh.Data.ThongSoSanPham", b =>
                {
                    b.Property<string>("MaThongSo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaSP")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GiaTriThongSo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaThongSo", "MaSP");

                    b.HasIndex("MaSP");

                    b.ToTable("ThongSoSanPham", (string)null);
                });

            modelBuilder.Entity("QL_MuaBanMayTinh.Data.TinhTrangThanhToan", b =>
                {
                    b.Property<string>("MaTTTT")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaHD")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaNV")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TinhTrang")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XacNhanDonHang")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaTTTT");

                    b.HasIndex("MaHD");

                    b.HasIndex("MaNV");

                    b.ToTable("TinhTrangThanhToan", (string)null);
                });

            modelBuilder.Entity("QL_MuaBanMayTinh.Data.ChiTietDonNhapHang", b =>
                {
                    b.HasOne("QL_MuaBanMayTinh.Data.DonNhapHang", "DonNhapHang")
                        .WithMany("ChiTietDonNhapHangs")
                        .HasForeignKey("MaDDH")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CTDNH_DNH");

                    b.HasOne("QL_MuaBanMayTinh.Data.SanPham", "SanPham")
                        .WithMany("ChiTietDonNhapHangs")
                        .HasForeignKey("MaSP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CTDNH_TP");

                    b.Navigation("DonNhapHang");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("QL_MuaBanMayTinh.Data.ChiTietHoaDon", b =>
                {
                    b.HasOne("QL_MuaBanMayTinh.Data.HoaDon", "HoaDon")
                        .WithMany("ChiTietHoaDons")
                        .HasForeignKey("MaHD")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CTHD_HD");

                    b.HasOne("QL_MuaBanMayTinh.Data.SanPham", "SanPham")
                        .WithMany("ChiTietHoaDons")
                        .HasForeignKey("MaSP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CTHD_SP");

                    b.Navigation("HoaDon");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("QL_MuaBanMayTinh.Data.DonNhapHang", b =>
                {
                    b.HasOne("QL_MuaBanMayTinh.Data.NhaCungCap", "NhaCungCap")
                        .WithMany("DonNhapHangs")
                        .HasForeignKey("MaNCC")
                        .HasConstraintName("FK_DNC_NCC");

                    b.HasOne("QL_MuaBanMayTinh.Data.NhanVien", "NhanVien")
                        .WithMany("DonNhapHangs")
                        .HasForeignKey("MaNV")
                        .HasConstraintName("FK_DNH_NV");

                    b.Navigation("NhaCungCap");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("QL_MuaBanMayTinh.Data.HoaDon", b =>
                {
                    b.HasOne("QL_MuaBanMayTinh.Data.KhachHang", "KhachHang")
                        .WithMany("HoaDons")
                        .HasForeignKey("MaKH")
                        .HasConstraintName("FK_HD_KH");

                    b.HasOne("QL_MuaBanMayTinh.Data.KhuyenMai", "KhuyenMai")
                        .WithMany("HoaDons")
                        .HasForeignKey("MaKM")
                        .HasConstraintName("FK_HD_KM");

                    b.Navigation("KhachHang");

                    b.Navigation("KhuyenMai");
                });

            modelBuilder.Entity("QL_MuaBanMayTinh.Data.NhanVien", b =>
                {
                    b.HasOne("QL_MuaBanMayTinh.Data.ChucVu", "ChucVu")
                        .WithMany("NhanViens")
                        .HasForeignKey("MaChucVu")
                        .HasConstraintName("FK_NV_CV");

                    b.Navigation("ChucVu");
                });

            modelBuilder.Entity("QL_MuaBanMayTinh.Data.SanPham", b =>
                {
                    b.HasOne("QL_MuaBanMayTinh.Data.DanhMucSanPham", "DanhMucSanPham")
                        .WithMany("SanPhams")
                        .HasForeignKey("MaDM")
                        .HasConstraintName("FK_TP_DMSP");

                    b.Navigation("DanhMucSanPham");
                });

            modelBuilder.Entity("QL_MuaBanMayTinh.Data.SanPhamThanhPhan", b =>
                {
                    b.HasOne("QL_MuaBanMayTinh.Data.SanPham", "SanPham")
                        .WithMany("SanPhamThanhPhans")
                        .HasForeignKey("MaSP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_SPTP_SP");

                    b.HasOne("QL_MuaBanMayTinh.Data.ThanhPhan", "ThanhPhan")
                        .WithMany("SanPhamThanhPhans")
                        .HasForeignKey("MaTP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_SPTP_TP");

                    b.Navigation("SanPham");

                    b.Navigation("ThanhPhan");
                });

            modelBuilder.Entity("QL_MuaBanMayTinh.Data.ThongSoSanPham", b =>
                {
                    b.HasOne("QL_MuaBanMayTinh.Data.SanPham", "SanPham")
                        .WithMany("ThongSoSanPhams")
                        .HasForeignKey("MaSP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_SP_TSSP");

                    b.HasOne("QL_MuaBanMayTinh.Data.ThongSoKyThuat", "ThongSoKyThuat")
                        .WithMany("ThongSoSanPhams")
                        .HasForeignKey("MaThongSo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_TSKY_TSSP");

                    b.Navigation("SanPham");

                    b.Navigation("ThongSoKyThuat");
                });

            modelBuilder.Entity("QL_MuaBanMayTinh.Data.TinhTrangThanhToan", b =>
                {
                    b.HasOne("QL_MuaBanMayTinh.Data.HoaDon", "HoaDon")
                        .WithMany("TinhTrangThanhToans")
                        .HasForeignKey("MaHD")
                        .HasConstraintName("FK_TTTT_HD");

                    b.HasOne("QL_MuaBanMayTinh.Data.NhanVien", "NhanVien")
                        .WithMany("TinhTrangThanhToans")
                        .HasForeignKey("MaNV")
                        .HasConstraintName("FK_TTTT_NV");

                    b.Navigation("HoaDon");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("QL_MuaBanMayTinh.Data.ChucVu", b =>
                {
                    b.Navigation("NhanViens");
                });

            modelBuilder.Entity("QL_MuaBanMayTinh.Data.DanhMucSanPham", b =>
                {
                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("QL_MuaBanMayTinh.Data.DonNhapHang", b =>
                {
                    b.Navigation("ChiTietDonNhapHangs");
                });

            modelBuilder.Entity("QL_MuaBanMayTinh.Data.HoaDon", b =>
                {
                    b.Navigation("ChiTietHoaDons");

                    b.Navigation("TinhTrangThanhToans");
                });

            modelBuilder.Entity("QL_MuaBanMayTinh.Data.KhachHang", b =>
                {
                    b.Navigation("HoaDons");
                });

            modelBuilder.Entity("QL_MuaBanMayTinh.Data.KhuyenMai", b =>
                {
                    b.Navigation("HoaDons");
                });

            modelBuilder.Entity("QL_MuaBanMayTinh.Data.NhaCungCap", b =>
                {
                    b.Navigation("DonNhapHangs");
                });

            modelBuilder.Entity("QL_MuaBanMayTinh.Data.NhanVien", b =>
                {
                    b.Navigation("DonNhapHangs");

                    b.Navigation("TinhTrangThanhToans");
                });

            modelBuilder.Entity("QL_MuaBanMayTinh.Data.SanPham", b =>
                {
                    b.Navigation("ChiTietDonNhapHangs");

                    b.Navigation("ChiTietHoaDons");

                    b.Navigation("SanPhamThanhPhans");

                    b.Navigation("ThongSoSanPhams");
                });

            modelBuilder.Entity("QL_MuaBanMayTinh.Data.ThanhPhan", b =>
                {
                    b.Navigation("SanPhamThanhPhans");
                });

            modelBuilder.Entity("QL_MuaBanMayTinh.Data.ThongSoKyThuat", b =>
                {
                    b.Navigation("ThongSoSanPhams");
                });
#pragma warning restore 612, 618
        }
    }
}
